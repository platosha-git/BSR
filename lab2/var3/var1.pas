uses crt;
const mf=500;
type
vector=array[1..mf] of real;
var {раздел описания переменных, которые мы будем использовать в
программе}
i, j, N, N1, N2, N3 : integer;
T, alfa, beta : vector;
ai, bi, ci, fi : real;
a, lamda, ro, c : real;
h, tau, t_end, time : real;
T0, L, kapa, Te, q : real;
f, g : text;
begin
    clrscr;
{с клавиатуры вводим все необходимые входные параметры}
    N := 100;
	t_end := 10;
	L := 0.3;
	lamda := 419; 
	ro := 10500;
	c := 200;
	Te := 60;
	kapa := 50;
	T0 := 15;
	q := 100000;
    
    {определяем номера узлов, в которых расположен источник}
    N1:=N div 4;
    N2:=2*N1;
    N3:=3*N1;
    
    {определяем расчетный шаг сетки по пространственной координате}
    h:=L/(N-1);
    
    {определяем коэффициент температуропроводности}
    a:=lamda/(ro*c);

    {определяем расчетный шаг сетки по времени}
    tau:=t_end/100.0;
    
    {определяем поле температуры в начальный момент времени}
    for i:= 1 to N do
        T[i]:=T0;
    
    {проводим интегрирование нестационарного уравнения теплопроводности}
    time:=0;
    while time<t_end do {используем цикл с предусловием}
    begin
    
        {увеличиваем переменную времени на шаг τ}
        time:=time+tau;

        {определяем начальные прогоночные коэффициенты на основе левого граничного условия, используя соотношения (24)}
        alfa[1]:=2.0*a*tau*lamda/(lamda*sqr(h)+2.0*a*tau*(lamda+kapa*h));
        beta[1]:=(lamda*sqr(h)*T[1]+2.0*a*tau*kapa*h*Te)/(lamda*sqr(h)+2.0*a*tau*(lamda+kapa*h));
    
        {цикл с параметром для определения прогоночных коэффициентов по формуле (8)}
        for i:= 2 to N-1 do
        begin
            
            {ai, bi, ci, fi – коэффициенты канонического представления системы уравнений с трехдиагональной матрицей}
            ai:=lamda/sqr(h);
            bi:=2.0*lamda/sqr(h)+ro*c/tau;
            ci:=lamda/sqr(h);
            fi:=-ro*c*T[i]/tau;
            
            {определяем fi в зависимости от рассматрвиаемой точки пространства}
            if (i=N1) or (i=N2) then fi:=-ro*c*T[i]/tau-h*(i-1)*q;
            if i=N3 then fi:=-ro*c*T[i]/tau-h*(N1-1)*q;
            
            {alfa[i], beta[i] – прогоночные коэффициенты}
            alfa[i]:=ai/(bi-ci*alfa[i-1]);
            beta[i]:=(ci*beta[i-1]-fi)/(bi-ci*alfa[i-1]);
        end;

        {определяем значение температуры на правой границе, используя соотношение (25)}
        T[N]:=(lamda*sqr(h)*T[N]+2.0*a*tau*(lamda*beta[N-1]+kapa*h*Te)) /(lamda*sqr(h)+2.0*a*tau*(lamda*(1-alfa[N-1])+kapa*h));
        
        {используя соотношение (7) определяем неизвестное поле температуры}
        for i:= N-1 downto 1 do
            T[i]:=alfa[i]*T[i+1]+beta[i];
    
    end; {цикл с предусловием окончен}

    {выводим результат в файл}

    Writeln('Толщина пластины L = ',L:6:4);
    Writeln('Число узлов по пространственной координате в пластине N = ',N);
    Writeln('Внутренние источники находятся в точках = ',N1,' ',N2,' ',N3);
    Writeln('Внутренние источники находятся в точках = ',(N1-1)*h:6:4,' ',(N2-1)*h:6:4,' ', (N3-1)*h:6:4);
    Writeln('Коэффициент теплопроводности материала пластины lamda = ',lamda:6:4);
    Writeln('Плотность материала пластины ro = ',ro:6:4);
    Writeln('Теплоемкость материала пластины с = ',c:6:4);
    Writeln('Начальная температура T0 = ',T0:6:4);
    Writeln('Коэффициент теплообмена kapa = ',kapa:6:4);
    Writeln('Температура окружающей среды Te = ',Te:6:4);
    Writeln('Составляющая мощности внутренних источников тепла q = ',q:6:4); 
    Writeln('Результат получен с шагом по координате h = ',h:6:4);
    Writeln('Результат получен с шагом по времени tau = ',tau:6:4);
    Writeln('Температурное поле в момент времени t = ',t_end:6:4);

    for i:=1 to N do
        writeln(' ',h*(i-1):10:8,' ',T[i]:8:5);
end.